package com.validator.interceptorfilter;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.Random;

public class SaltPasswordFilter implements Filter{
	
	private static final Random RANDOM_GEN = new SecureRandom();
	
	@Override
	public void executeFilter(String password) {
		//the method for salting password comes here 
		String salted_pwd = new String();
		
	}
	
	public static byte[] getNextSalt() {
	    byte[] salt = new byte[16];
	    RANDOM_GEN.nextBytes(salt);
	    return salt;
	  }
	
	public String saltIt(String password) {
		String salted_pwd = null;
		if(null == password) return null;
		
		try {
			MessageDigest digest = MessageDigest.getInstance("MD5");
			digest.update(password.getBytes(), 0, password.length());
			salted_pwd = new BigInteger(1, digest.digest()).toString(16);
		} catch (NoSuchAlgorithmException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return salted_pwd;
	}
	
	public static void main(String[] args) {
		SaltPasswordFilter filter = new SaltPasswordFilter();
		System.out.println(filter.saltIt("munich"));
	}
}
